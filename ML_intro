import matplotlib.pyplot as plt
import numpy as np
from scipy import stats

x=[5,7,12,13,18]
y=[1,12,16,21,23]

plt.scatter(x,y)
plt.show()

slope, intercept,r ,p ,std_err = stats.linregress(x,y)
def myfunc(x):
  return slope * x + intercept

mymodel=list(map(myfunc, x))
plt.scatter(x, y)
plt.plot(x, mymodel)
plt.show()

print(r)
print(p)

#Logistic Regression

import matplotlib.pyplot as plt
from scipy.optimize import curve_fit
import numpy as np


x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 18, 23]
y = [100, 90, 80, 60, 60, 55, 60, 65, 70, 70, 75, 76, 78, 79]

mymodel = np.poly1d(np.polyfit(x, y, 3))

myline = np.linspace(1, 22, 100)

plt.scatter(x, y)
plt.plot(myline, mymodel(myline))
plt.show()

from sklearn.metrics import r2_score
import numpy as np

mymodel = np.poly1d(np.polyfit(x, y, 3))

print(r2_score(y, mymodel(x)))
